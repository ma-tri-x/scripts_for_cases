/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.0.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    object      rho_gTilde;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -3 0 0 0 0 0];

internalField   uniform 1.2673867788287;

boundaryField
{

    front
    {
      type      wedge;
    }
    
    back
    {
      type      wedge;
    }
    
    
    top
    {
        type      wedge;    
    }
    
    top_
    {
        type  zeroGradient;
    }
    
    bottom
    {
        type      wedge;
    }
    
     bottom_
     {
         type       zeroGradient;
     }
    
    side
    {
        type  zeroGradient;
//         type            waveTransmissive;
//         field           rho_g;
//         phi             phi;
//         rho             rho_g;
// //         psi           psim;
//         psi             DrhoDp;
//         fieldInf        1.2673867788287;
//         gamma           1; //1.006580313;
//         lInf            10;//0.0034;//1e-3;
//         value           uniform 1.2673867788287;
//         inletOutlet     true;
//         correctSupercritical true;
    }
    
    upside
    {
        type  zeroGradient;
    }
    
    downside
    {
        type  zeroGradient;
    }
    
   /*outflow
   {
       type            waveTransmissive;
       value           uniform 80000;    //important for correct I/O
       field           p;                //the name of the field that we are working on
       gamma           1.4;              //the ratio of specific heats
       phi             phiv;             //the name of the volumetric flux field ( or if you use the mass flux phi, it will be divided by rho)
       rho             rho;              //the name of the density field
       psi             psi;              //the name of the field that is the deriv. of density with respect to pressure
       lInf            0.05;             //a measure of how far away the far-field condition should be
       fieldInf        80000;            //the far-field value to be applied to p
   }
   The boundary condition performs some basic thermodynamic calculations and tries 
   to do the following: create a tendency towards the fieldInf value while setting 
   the instantaneous value to be someting as consistant as possible with the outgoing 
   characteristics. The larger the value of lInf, the further the boundary condition 
   will deviate from the value specified as fieldInf. However, the smaller the value 
   of lInf, the more reflective the boundary tends to be.*/

     axis
     {
         type      empty;
     }

     box1x1x1_region0
     {
         type       zeroGradient;
     }
     
     wall
     {
         type       zeroGradient;
     }
     wall2
     {
         type       empty;
     }
     
    wall_in
    {
        type   zeroGradient;
    }
    
    top_out
    {
        type   zeroGradient;
    }
    

    frontandback_pos
    {
      type      wedge;
    }
    frontandback_neg
    {
      type      wedge;
    }
    frontandback
    {
      type      empty;
    }

}

// ************************************************************************* //
